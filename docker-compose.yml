version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: smart_hospital_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: smart_hospital
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: hospital_user
      MYSQL_PASSWORD: hospital_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init:/docker-entrypoint-initdb.d
    networks:
      - smart_hospital_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: smart_hospital_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - smart_hospital_network

  # Laravel Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: smart_hospital_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: smart_hospital
      DB_USERNAME: hospital_user
      DB_PASSWORD: hospital_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      APP_ENV: local
      APP_DEBUG: true
    volumes:
      - ./backend:/var/www/html
      - ./backend/storage:/var/www/html/storage
    depends_on:
      - mysql
      - redis
    networks:
      - smart_hospital_network

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: smart_hospital_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: http://localhost:8000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - smart_hospital_network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: smart_hospital_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./backend/storage:/var/www/html/storage
    depends_on:
      - backend
      - frontend
    networks:
      - smart_hospital_network

volumes:
  mysql_data:
  redis_data:

networks:
  smart_hospital_network:
    driver: bridge
